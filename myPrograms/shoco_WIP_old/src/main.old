use ::libc;
#[cfg(target_arch = "x86")]
pub use core::arch::x86::{
    __m128i, _mm_and_si128, _mm_cmpgt_epi16, _mm_load_si128, _mm_setzero_si128,
    _mm_movemask_epi8,
};
#[cfg(target_arch = "x86_64")]
pub use core::arch::x86_64::{
    __m128i, _mm_and_si128, _mm_cmpgt_epi16, _mm_load_si128, _mm_setzero_si128,
    _mm_movemask_epi8,
};
pub type __int8_t = libc::c_schar;
pub type __int16_t = libc::c_short;
pub type __uint32_t = libc::c_uint;
pub type int8_t = __int8_t;
pub type int16_t = __int16_t;
pub type uint32_t = __uint32_t;
pub type size_t = libc::c_ulong;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct Pack {
    pub word: uint32_t,
    pub bytes_packed: libc::c_uint,
    pub bytes_unpacked: libc::c_uint,
    pub offsets: [libc::c_uint; 8],
    pub masks: [int16_t; 8],
    pub header_mask: libc::c_char,
    pub header: libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub union Code {
    pub word: uint32_t,
    pub bytes: [libc::c_char; 4],
}
static mut chrs_by_chr_id: [libc::c_char; 32] = [
    'e' as i32 as libc::c_char,
    'a' as i32 as libc::c_char,
    'i' as i32 as libc::c_char,
    'o' as i32 as libc::c_char,
    't' as i32 as libc::c_char,
    'h' as i32 as libc::c_char,
    'n' as i32 as libc::c_char,
    'r' as i32 as libc::c_char,
    's' as i32 as libc::c_char,
    'l' as i32 as libc::c_char,
    'u' as i32 as libc::c_char,
    'c' as i32 as libc::c_char,
    'w' as i32 as libc::c_char,
    'm' as i32 as libc::c_char,
    'd' as i32 as libc::c_char,
    'b' as i32 as libc::c_char,
    'p' as i32 as libc::c_char,
    'f' as i32 as libc::c_char,
    'g' as i32 as libc::c_char,
    'v' as i32 as libc::c_char,
    'y' as i32 as libc::c_char,
    'k' as i32 as libc::c_char,
    'H' as i32 as libc::c_char,
    '-' as i32 as libc::c_char,
    'M' as i32 as libc::c_char,
    'T' as i32 as libc::c_char,
    '\'' as i32 as libc::c_char,
    'B' as i32 as libc::c_char,
    'x' as i32 as libc::c_char,
    'I' as i32 as libc::c_char,
    'W' as i32 as libc::c_char,
    'L' as i32 as libc::c_char,
];
static mut chr_ids_by_chr: [int8_t; 256] = [
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    26 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    23 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    27 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    22 as libc::c_int as int8_t,
    29 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    31 as libc::c_int as int8_t,
    24 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    25 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    30 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    1 as libc::c_int as int8_t,
    15 as libc::c_int as int8_t,
    11 as libc::c_int as int8_t,
    14 as libc::c_int as int8_t,
    0 as libc::c_int as int8_t,
    17 as libc::c_int as int8_t,
    18 as libc::c_int as int8_t,
    5 as libc::c_int as int8_t,
    2 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    21 as libc::c_int as int8_t,
    9 as libc::c_int as int8_t,
    13 as libc::c_int as int8_t,
    6 as libc::c_int as int8_t,
    3 as libc::c_int as int8_t,
    16 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    7 as libc::c_int as int8_t,
    8 as libc::c_int as int8_t,
    4 as libc::c_int as int8_t,
    10 as libc::c_int as int8_t,
    19 as libc::c_int as int8_t,
    12 as libc::c_int as int8_t,
    28 as libc::c_int as int8_t,
    20 as libc::c_int as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
    -(1 as libc::c_int) as int8_t,
];
static mut successor_ids_by_chr_id_and_chr_id: [[int8_t; 32]; 32] = [
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
    [
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
        -(1 as libc::c_int) as int8_t,
    ],
];
static mut chrs_by_chr_and_successor_id: [[int8_t; 16]; 83] = [
    [
        115 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        65 as libc::c_int as int8_t,
        84 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        45 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        117 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        73 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        82 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        65 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        116 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        73 as libc::c_int as int8_t,
        78 as libc::c_int as int8_t,
        76 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        65 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        86 as libc::c_int as int8_t,
        90 as libc::c_int as int8_t,
        82 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        111 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        73 as libc::c_int as int8_t,
        76 as libc::c_int as int8_t,
        68 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        89 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        114 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        89 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        104 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        69 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        72 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        82 as libc::c_int as int8_t,
        90 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        104 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        73 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        110 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        106 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
    ],
    [
        111 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        113 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
    ],
    [
        114 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        120 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
    ],
    [
        111 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
    ],
    [
        104 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
    ],
    [
        110 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        122 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
    ],
    [
        100 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
    ],
    [
        117 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        118 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
    ],
    [
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
    ],
    [
        104 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
    ],
    [
        114 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        103 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
    ],
    [
        101 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        97 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        107 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
    ],
    [
        112 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        99 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        104 as libc::c_int as int8_t,
        113 as libc::c_int as int8_t,
        117 as libc::c_int as int8_t,
        102 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        121 as libc::c_int as int8_t,
        111 as libc::c_int as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
        '\0' as i32 as int8_t,
    ],
    [
        111 as libc::c_int as int8_t,
        101 as libc::c_int as int8_t,
        115 as libc::c_int as int8_t,
        116 as libc::c_int as int8_t,
        105 as libc::c_int as int8_t,
        100 as libc::c_int as int8_t,
        39 as libc::c_int as int8_t,
        108 as libc::c_int as int8_t,
        98 as libc::c_int as int8_t,
        45 as libc::c_int as int8_t,
        109 as libc::c_int as int8_t,
        97 as libc::c_int as int8_t,
        114 as libc::c_int as int8_t,
        112 as libc::c_int as int8_t,
        110 as libc::c_int as int8_t,
        119 as libc::c_int as int8_t,
    ],
];
static mut packs: [Pack; 3] = [
    {
        let mut init = Pack {
            word: 0x80000000 as libc::c_uint,
            bytes_packed: 1.0f64 as libc::c_uint,
            bytes_unpacked: 2 as libc::c_int as libc::c_uint,
            offsets: [
                26 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
                24 as libc::c_int as libc::c_uint,
            ],
            masks: [
                15 as libc::c_int as int16_t,
                3 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
            ],
            header_mask: 0xc0 as libc::c_int as libc::c_char,
            header: 0x80 as libc::c_int as libc::c_char,
        };
        init
    },
    {
        let mut init = Pack {
            word: 0xc0000000 as libc::c_uint,
            bytes_packed: 2.0f64 as libc::c_uint,
            bytes_unpacked: 4 as libc::c_int as libc::c_uint,
            offsets: [
                25 as libc::c_int as libc::c_uint,
                22 as libc::c_int as libc::c_uint,
                19 as libc::c_int as libc::c_uint,
                16 as libc::c_int as libc::c_uint,
                16 as libc::c_int as libc::c_uint,
                16 as libc::c_int as libc::c_uint,
                16 as libc::c_int as libc::c_uint,
                16 as libc::c_int as libc::c_uint,
            ],
            masks: [
                15 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
                0 as libc::c_int as int16_t,
            ],
            header_mask: 0xe0 as libc::c_int as libc::c_char,
            header: 0xc0 as libc::c_int as libc::c_char,
        };
        init
    },
    {
        let mut init = Pack {
            word: 0xe0000000 as libc::c_uint,
            bytes_packed: 4.0f64 as libc::c_uint,
            bytes_unpacked: 8 as libc::c_int as libc::c_uint,
            offsets: [
                23 as libc::c_int as libc::c_uint,
                19 as libc::c_int as libc::c_uint,
                15 as libc::c_int as libc::c_uint,
                11 as libc::c_int as libc::c_uint,
                8 as libc::c_int as libc::c_uint,
                5 as libc::c_int as libc::c_uint,
                2 as libc::c_int as libc::c_uint,
                0 as libc::c_int as libc::c_uint,
            ],
            masks: [
                31 as libc::c_int as int16_t,
                15 as libc::c_int as int16_t,
                15 as libc::c_int as int16_t,
                15 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                7 as libc::c_int as int16_t,
                3 as libc::c_int as int16_t,
            ],
            header_mask: 0xf0 as libc::c_int as libc::c_char,
            header: 0xe0 as libc::c_int as libc::c_char,
        };
        init
    },
];
#[inline]
unsafe extern "C" fn decode_header(mut val: libc::c_uchar) -> libc::c_int {
    let mut i = -(1 as libc::c_int);
    while (val as libc::c_schar as libc::c_int) < 0 as libc::c_int {
        val = ((val as libc::c_int) << 1 as libc::c_int) as libc::c_uchar;
        i += 1;
        i;
    }
    return i;
}
#[inline]
unsafe extern "C" fn check_indices(
    mut indices: *const int16_t,
    mut pack_n: libc::c_int,
) -> libc::c_int {
    let mut zero = _mm_setzero_si128();
    let mut indis = _mm_load_si128(indices as *mut __m128i);
    let mut masks = _mm_load_si128(
        (packs[pack_n as usize].masks).as_ptr() as *mut __m128i,
    );
    let mut cmp = _mm_cmpgt_epi16(indis, masks);
    let mut mmask = _mm_cmpgt_epi16(masks, zero);
    cmp = _mm_and_si128(cmp, mmask);
    let mut result = _mm_movemask_epi8(cmp);
    return (result == 0 as libc::c_int) as libc::c_int;
}
#[inline]
unsafe extern "C" fn find_best_encoding(
    mut indices: *const int16_t,
    mut n_consecutive: libc::c_uint,
) -> libc::c_int {
    let mut p = 3 as libc::c_int - 1 as libc::c_int;
    while p >= 0 as libc::c_int {
        if n_consecutive >= packs[p as usize].bytes_unpacked
            && check_indices(indices, p) != 0
        {
            return p;
        }
        p -= 1;
        p;
    }
    return -(1 as libc::c_int);
}
#[no_mangle]
pub unsafe extern "C" fn shoco_compress(
    original: *const libc::c_char,
    mut strlen: size_t,
    out: *mut libc::c_char,
    mut bufsize: size_t,
) -> size_t {
    let mut o = out;
    let out_end = out.offset(bufsize as isize);
    let mut in_0 = original;
    let mut indices: [int16_t; 8] = [0 as libc::c_int as int16_t, 0, 0, 0, 0, 0, 0, 0];
    let mut last_chr_index: libc::c_int = 0;
    let mut current_index: libc::c_int = 0;
    let mut successor_index: libc::c_int = 0;
    let mut n_consecutive: libc::c_uint = 0;
    let mut code = Code { word: 0 };
    let mut pack_n: libc::c_int = 0;
    let mut rest: libc::c_uint = 0;
    let in_end = original.offset(strlen as isize);
    while *in_0 as libc::c_int != '\0' as i32 {
        if strlen != 0 && in_0 == in_end {
            break;
        }
        indices[0 as libc::c_int
            as usize] = chr_ids_by_chr[*in_0.offset(0 as libc::c_int as isize)
            as libc::c_uchar as usize] as int16_t;
        last_chr_index = indices[0 as libc::c_int as usize] as libc::c_int;
        if !(last_chr_index < 0 as libc::c_int) {
            rest = in_end.offset_from(in_0) as libc::c_long as libc::c_uint;
            n_consecutive = 1 as libc::c_int as libc::c_uint;
            while n_consecutive <= 7 as libc::c_int as libc::c_uint {
                if strlen != 0 && n_consecutive == rest {
                    break;
                }
                current_index = chr_ids_by_chr[*in_0.offset(n_consecutive as isize)
                    as libc::c_uchar as usize] as libc::c_int;
                if current_index < 0 as libc::c_int {
                    break;
                }
                successor_index = successor_ids_by_chr_id_and_chr_id[last_chr_index
                    as usize][current_index as usize] as libc::c_int;
                if successor_index < 0 as libc::c_int {
                    break;
                }
                indices[n_consecutive as usize] = successor_index as int16_t;
                last_chr_index = current_index;
                n_consecutive = n_consecutive.wrapping_add(1);
                n_consecutive;
            }
            if !(n_consecutive < 2 as libc::c_int as libc::c_uint) {
                pack_n = find_best_encoding(indices.as_mut_ptr(), n_consecutive);
                if pack_n >= 0 as libc::c_int {
                    if o.offset(packs[pack_n as usize].bytes_packed as isize) > out_end {
                        return bufsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
                    }
                    code.word = packs[pack_n as usize].word;
                    let mut i = 0 as libc::c_int as libc::c_uint;
                    while i < packs[pack_n as usize].bytes_unpacked {
                        code.word
                            |= ((indices[i as usize] as libc::c_int)
                                << packs[pack_n as usize].offsets[i as usize])
                                as libc::c_uint;
                        i = i.wrapping_add(1);
                        i;
                    }
                    code
                        .word = (code.word << 24 as libc::c_int)
                        .wrapping_add(
                            (code.word & 0xff00 as libc::c_int as libc::c_uint)
                                << 8 as libc::c_int,
                        )
                        .wrapping_add(
                            (code.word & 0xff0000 as libc::c_int as libc::c_uint)
                                >> 8 as libc::c_int,
                        )
                        .wrapping_add(code.word >> 24 as libc::c_int);
                    let mut i_0 = 0 as libc::c_int as libc::c_uint;
                    while i_0 < packs[pack_n as usize].bytes_packed {
                        *o.offset(i_0 as isize) = code.bytes[i_0 as usize];
                        i_0 = i_0.wrapping_add(1);
                        i_0;
                    }
                    o = o.offset(packs[pack_n as usize].bytes_packed as isize);
                    in_0 = in_0.offset(packs[pack_n as usize].bytes_unpacked as isize);
                    continue;
                }
            }
        }
        if *in_0 as libc::c_int & 0x80 as libc::c_int != 0 {
            if o.offset(2 as libc::c_int as isize) > out_end {
                return bufsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
            }
            let fresh0 = o;
            o = o.offset(1);
            *fresh0 = 0 as libc::c_int as libc::c_char;
        } else if o.offset(1 as libc::c_int as isize) > out_end {
            return bufsize.wrapping_add(1 as libc::c_int as libc::c_ulong)
        }
        let fresh1 = in_0;
        in_0 = in_0.offset(1);
        let fresh2 = o;
        o = o.offset(1);
        *fresh2 = *fresh1;
    }
    return o.offset_from(out) as libc::c_long as size_t;
}
#[no_mangle]
pub unsafe extern "C" fn shoco_decompress(
    original: *const libc::c_char,
    mut complen: size_t,
    out: *mut libc::c_char,
    mut bufsize: size_t,
) -> size_t {
    let mut o = out;
    let out_end = out.offset(bufsize as isize);
    let mut in_0 = original;
    let mut last_chr: libc::c_char = 0;
    let mut code = Code {
        word: 0 as libc::c_int as uint32_t,
    };
    let mut offset: libc::c_int = 0;
    let mut mask: libc::c_int = 0;
    let mut mark: libc::c_int = 0;
    let in_end = original.offset(complen as isize);
    while in_0 < in_end {
        mark = decode_header(*in_0 as libc::c_uchar);
        if mark < 0 as libc::c_int {
            if o >= out_end {
                return bufsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
            }
            if *in_0 as libc::c_int == 0 as libc::c_int {
                in_0 = in_0.offset(1);
                if in_0 >= in_end {
                    return 18446744073709551615 as libc::c_ulong;
                }
            }
            let fresh3 = in_0;
            in_0 = in_0.offset(1);
            let fresh4 = o;
            o = o.offset(1);
            *fresh4 = *fresh3;
        } else {
            if o.offset(packs[mark as usize].bytes_unpacked as isize) > out_end {
                return bufsize.wrapping_add(1 as libc::c_int as libc::c_ulong)
            } else if in_0.offset(packs[mark as usize].bytes_packed as isize) > in_end {
                return 18446744073709551615 as libc::c_ulong
            }
            let mut i = 0 as libc::c_int as libc::c_uint;
            while i < packs[mark as usize].bytes_packed {
                code.bytes[i as usize] = *in_0.offset(i as isize);
                i = i.wrapping_add(1);
                i;
            }
            code
                .word = (code.word << 24 as libc::c_int)
                .wrapping_add(
                    (code.word & 0xff00 as libc::c_int as libc::c_uint)
                        << 8 as libc::c_int,
                )
                .wrapping_add(
                    (code.word & 0xff0000 as libc::c_int as libc::c_uint)
                        >> 8 as libc::c_int,
                )
                .wrapping_add(code.word >> 24 as libc::c_int);
            offset = packs[mark as usize].offsets[0 as libc::c_int as usize]
                as libc::c_int;
            mask = packs[mark as usize].masks[0 as libc::c_int as usize] as libc::c_int;
            let ref mut fresh5 = *o.offset(0 as libc::c_int as isize);
            *fresh5 = chrs_by_chr_id[(code.word >> offset & mask as libc::c_uint)
                as usize];
            last_chr = *fresh5;
            let mut i_0 = 1 as libc::c_int as libc::c_uint;
            while i_0 < packs[mark as usize].bytes_unpacked {
                offset = packs[mark as usize].offsets[i_0 as usize] as libc::c_int;
                mask = packs[mark as usize].masks[i_0 as usize] as libc::c_int;
                let ref mut fresh6 = *o.offset(i_0 as isize);
                *fresh6 = chrs_by_chr_and_successor_id[(last_chr as libc::c_uchar
                    as libc::c_int - 39 as libc::c_int)
                    as usize][(code.word >> offset & mask as libc::c_uint) as usize]
                    as libc::c_char;
                last_chr = *fresh6;
                i_0 = i_0.wrapping_add(1);
                i_0;
            }
            o = o.offset(packs[mark as usize].bytes_unpacked as isize);
            in_0 = in_0.offset(packs[mark as usize].bytes_packed as isize);
        }
    }
    if o < out_end {
        *o = '\0' as i32 as libc::c_char;
    }
    return o.offset_from(out) as libc::c_long as size_t;
}

pub fn main() {}